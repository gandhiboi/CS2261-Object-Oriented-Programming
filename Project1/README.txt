For this project, I implemented several user input validations to prevent any problems within the comparisons and output. The program displays the name of the game, the rules of the game, and options for the user to enter. The input checks to see the first character that the user enters, so if the user enters “yes” or just “y” it will continue the program or if they enter “no” or “n” the program will display a thank you message and terminate. The loop within the project validates user input for the choices “A, B or C.” After the user enters an option, the outcome is displayed along with the statistic of the user versus the computer. The program will then prompt whether or not the user would like to play again. If they want to play again the loop executes until they enter “no” or “n.” When the user is finished playing, the program thanks the user for playing and displays the final statistics.
The intelligent strategy used to outfox the user was if the computer is losing in score, then it will continue to pick the same option until it catches up. It is not the very best strategy to win games, however, it did manage to trick the people that tested the game.  Other than coming up with a decent intelligent strategy for the computer, I had trouble implementing the comparisons of the user’s choice to the computer’s choice. I was not able to figure out why my if-else statements were not executing properly, and as a result I made them all if statements and it ended up working just fine. Only a few of the if-else statements were not working even though they all had the same syntax and seemed logically correct to me, so I just made them all if statements and it worked.
